<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:template match="//country[@population &lt;10000000 and @population &gt; 9000000]">
        <xsl:copy-of select="."/>
    </xsl:template>
    
    <xsl:template match="text()"/>
</xsl:stylesheet>


<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:template match="/">
    <html>
    <table border="1">
  
    <xsl:for-each select="//country[count(language) &gt;3]">
    <xsl:sort select="count(language)" order="descending"/>
        <tr>
        <td><b><xsl:value-of select="@name"/></b></td>
        <td><xsl:value-of select="@population"/></td>
        <td><xsl:value-of select="@area"/></td>
        <td><xsl:value-of select="count(language)"/></td>
        </tr>
    </xsl:for-each>
    </table>
    </html>
    </xsl:template>

</xsl:stylesheet>


<!--** use the recursive to achieve the requirement of "alternate version" **-->
<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:template match="*|@*|text()">
        <xsl:copy>
        <xsl:apply-templates select="*|@*|text()"/>
        </xsl:copy>
    </xsl:template>
    <xsl:template match="//country">
        <country languages="{count(language)}" cities="{count(city)}">
          <name> <xsl:value-of select="@name"/> </name>
          <population> <xsl:value-of select="@population"/> </population>
        </country>
    </xsl:template>
</xsl:stylesheet>

<!--**************************************************************-->

<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:template match="//country[contains(@name, &quot;stan&quot;)]">
        <Stan> <xsl:value-of select="@name"/> </Stan>
    </xsl:template>
    
    <xsl:template match="text()"/>

</xsl:stylesheet>


<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:template match="*|@*|text()">
        <xsl:copy>
            <xsl:apply-templates select="*|@*|text()"/>
        </xsl:copy>
    </xsl:template>
    
    <xsl:template match="//country[@area &gt;40000]"/>
    <xsl:template match="//country[not(exists(city))]"/>

</xsl:stylesheet>